import React from "react";
import { Document, Page, Text, View, StyleSheet, Image } from "@react-pdf/renderer";

const styles = StyleSheet.create({
  page: {
    flexDirection: "column",
    backgroundColor: "#ffffff",
    padding: 30,
    fontFamily: "Helvetica",
  },
  header: {
    marginBottom: 20,
    borderBottom: "2px solid #333",
    paddingBottom: 10,
  },
  title: {
    fontSize: 28,
    fontWeight: "bold",
    color: "#333",
    textAlign: "center",
    marginBottom: 5,
  },
  subtitle: {
    fontSize: 12,
    color: "#666",
    textAlign: "center",
  },
  content: {
    fontSize: 11,
    lineHeight: 1.6,
    textAlign: "justify",
    marginTop: 15,
  },
  imageContainer: {
    alignItems: "center",
    marginVertical: 15,
  },
  image: {
    maxWidth: 300,
    maxHeight: 200,
    objectFit: "contain",
  },
  footer: {
    position: "absolute",
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: "center",
    fontSize: 10,
    color: "#666",
    borderTop: "1px solid #ddd",
    paddingTop: 10,
  },
});
  

const PDFDocument = ({ title, content, imageData, author, date }) => {
  const stripHtmlTags = (html) => {
    if (!html) return "";
    try {
      const doc = new DOMParser().parseFromString(html, "text/html");
      return doc.body.textContent || "";
    } catch {
      return html.replace(/<[^>]*>/g, "");
    }
  };

  const formatDate = (date) => {
    if (!date) return new Date().toLocaleDateString();
    return new Date(date).toLocaleDateString();
  };

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Text style={styles.title}>{title || "Untitled Document"}</Text>
          <Text style={styles.subtitle}>
            {author && `By ${author} â€¢ `}Generated on {formatDate(date)}
          </Text>
        </View>
        
        {imageData && (
          <View style={styles.imageContainer}>
            <Image src={imageData} style={styles.image} />
          </View>
        )}
        
        <Text style={styles.content}>
          {stripHtmlTags(content) || "No content available."}
        </Text>
        
        <Text style={styles.footer}>
          Generated by Dashboard App
        </Text>
      </Page>
    </Document>
  );
};

export default PDFDocument;
